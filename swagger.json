{
  "swagger": "2.0",
  "info": {
    "title": "Task API",
    "description": "API for managing tasks",
    "version": "1.0.0"
  },
  "host": "blue-cse-341-api.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/tasks/": {
      "get": {
        "description": "Get all tasks",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Create a new task",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "Finish homework"
                },
                "description": {
                  "example": "Math and Science tasks"
                },
                "completed": {
                  "example": false
                },
        "dueDate": {
                  "example":"2025-11-05T23:59:00.000Z"},

        "priority": {
                  "example":"high"},
        "tags": {
                  "example":["math","science"]},
        "assignedTo": {
                  "example":"Marcus Thompson"},
        "createdAt": {
                  "example":"2025-10-27T08:00:00.000Z"},
        "updatedAt": {
                  "example":"2025-10-27T08:00:00.000Z"}

              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "description": "Get task by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "description": "Update task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "Finish homework"
                },
                "description": {
                  "example": "Math and Science tasks"
                },
                "completed": {
                  "example": false
                },
           "dueDate": {
                  "example":"2025-11-05T23:59:00.000Z"},

        "priority": {
                  "example":"high"},
        "tags": {
                  "example":["math","science"]},
        "assignedTo": {
                  "example":"Marcus Thompson"},
        "createdAt": {
                  "example":"2025-10-27T08:00:00.000Z"},
        "updatedAt": {
                  "example":"2025-10-27T08:00:00.000Z"}

                
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal Server Error"
          },
        
         "/users/": {
      "get": {
        "description": "Get all users",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": [
                {
                  "_id": "",
                  "oauthId": "",
                  "name": "Marcus Thompson",
                  "email": "marcus@example.com"
                  
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oauthId": "",
                "name": { "example": "Marcus Thompson" },
                "email": { "example": "marcus@example.com" }
      
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User created" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "description": "Get user by ID",
        "produces": ["application/json"],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "type": "string" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "_id": "",
                "oauthId": "",
                "name": "Marcus Thompson",
                "email": "marcus@example.com"
              }
            }
          },
          "404": { "description": "User not found" }},
              
          
        "delete": {
        "description": "Delete user by ID",
        "parameters": [{ "name": "id", "in": "path", "required": true, "type": "string" }],
        "responses": {
          "204": { "description": "User deleted" },
          "404": { "description": "User not found" },
          "500": { "description": "Internal Server Error" }
        }
       }
      }
    }
  }
      }}}}
      